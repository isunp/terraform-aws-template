---
# .github/workflows/terraform.yaml
name: Terraform - Plan||Apply
run-name: '[${{ github.event_name }} - ${{ github.ref_name }}] Terraform executed by @${{ github.actor }}'

on:
  push:
    branches:
      - main
      # - DEVOPS-6-FIXES

  pull_request:
    branches:
      - main
      - DEVOPS-6-FIXES
permissions:
  id-token: write
  contents: read
  pull-requests: write
  
env:
  terraformVersion: 1.3.6
  terraformWorkDir: .
  terraformModulesGithubOrg: terraform-aws-module-template
  awsRegion: us-east-1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraformVersion }}
          
      - name: Terraform Format
        run: terraform fmt --check

      
      - name: Terraform Initialize
        id: init
        run: |
          cd ${{ env.terraformWorkDir }}
          terraform init
      
      - name: Checkov
        uses: bridgecrewio/checkov-action@master
        with:
         args: -d .
         
      - name: Terraform Validate
        run: terraform validate -no-color

      - name:  Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.base.ref }}'  

      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=.  \
                        --format=json \
                        --out-file=/tmp/infracost-base.json

      - name: Checkout PR branch
        uses: actions/checkout@v3

      - name: Generate Infracost diff
        id: infracost-diff
        run: |
          infracost diff --path=${{ env.terraformWorkDir }} \
                          --format=json \
                          --compare-to=/tmp/infracost-base.json \
                          --out-file=/tmp/infracost.json

      - name: Post Infracost comment
        if: steps.infracost-diff.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.BASE_GITHUB_TOKEN }}
        run: |
          infracost comment github \
            --path=/tmp/infracost.json \
           --pull-request=${{ github.event.number }} \
            --repo=${{ github.repository }} \
            --github-token=${{ env.GITHUB_TOKEN }}
            --behavior=update

      
      
  plan_or_apply:
    name: Terraform Plan|Apply
    needs: lint
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Setup git repo credentials for terraform modules
        run: |
          git config --global \
          url."https://git:${{ env.githubToken }}@github.com/${{ env.terraformModulesGithubOrg }}".insteadOf \
          "https://github.com/${{ env.terraformModulesGithubOrg }}"
        shell: sh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraformVersion }}

      - name: Terraform Initialize
        id: init
        run: |
          cd ${{ env.terraformWorkDir }}
          terraform init

      - name: Terraform Plans
        id: plan
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          cd ${{ env.terraformWorkDir }}
          terraform plan -no-color -out tf.plan

      - name: Upload Terraform Plan File
        if: steps.plan.outcome == 'success' && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: tf.plan
          path: ${{ env.terraformWorkDir }}/tf.plan
          retention-days: 3
      
      - name: Terraform Show
        if: steps.plan.outcome == 'success' && github.event_name == 'pull_request'
        id: show
        run: |-
          echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' | tail -c 35000 \
          | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > /tmp/plan.txt
          PLAN=$(cat /tmp/plan.txt)

      - name: Post Plan to GitHub PR
        if: steps.plan.outcome == 'success' && github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ## Terraform Plan
            ### Environment: ${{ github.base_ref }}
            ### Region: us-east-1
            ***Author***: `${{ github.actor }}` ***Action***: `${{ github.event_name }}`
            ***Working Directory***: `${{ env.terraformWorkDir }}`
            ***Workflow***: `${{ github.workflow }}`
            Please review below Terraform plan before accepting merge request:
            ```diff
            ${{ env.PLAN }}
            ```

      - name: Post Plan Failure
        if: steps.plan.outcome == 'failure'
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ## Terraform Plan
            ### Environment: ${{ github.base_ref }}
            ### Region: us-east-1
            ***Author***: `${{ github.actor }}` ***Action***: `${{ github.event_name }}`
            ***Working Directory***: `${{ env.terraformWorkDir }}`
            ***Workflow***: `${{ github.workflow }}`
            ```
            ${{ steps.plan.outputs.stderr }}
            ```
      
      - name: Stop pipeline if failed
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        if: github.event_name == 'push'
        id: apply
        run: |
          cd ${{ env.terraformWorkDir }}
          terraform apply -auto-approve  -no-color

      - name: Post Apply to GitHub PR
        if: steps.apply.outcome == 'success'
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: github-actions[bot]
          message: |
            ## Terraform Apply
            ### Environment: ${{ github.ref_name }}
            ### Region: us-east-1
            ```
            ${{ steps.apply.outputs.stdout }}
            ```

      - name: Post Apply Failure
        if: steps.apply.outcome == 'failure'
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: github-actions[bot]
          message: |-
            ## Terraform Apply
            ### Environment: ${{ github.ref_name }}
            ### Region: us-east-1
            ```
            ${{ steps.apply.outputs.stderr }}
            ```
      - name: Stop pipeline if failed
        if: steps.apply.outcome == 'failure'
        run: exit 1


      